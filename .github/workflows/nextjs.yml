name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main"]
    paths:
      - "frontend/**"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: List contents of current directory
        run: ls -la
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/frontend/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_ENV
            echo "command=install" >> $GITHUB_ENV
            echo "runner=yarn" >> $GITHUB_ENV
            exit 0
          elif [ -f "${{ github.workspace }}/frontend/package.json" ]; then
            echo "manager=npm" >> $GITHUB_ENV
            echo "command=ci" >> $GITHUB_ENV
            echo "runner=npx --no-install" >> $GITHUB_ENV
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Install dependencies and build
        run: |
          cd frontend
          ${{ steps.detect-package-manager.outputs.runner }} ${{ steps.detect-package-manager.outputs.command }}
          ${{ steps.detect-package-manager.outputs.runner }} next build
          ${{ steps.detect-package-manager.outputs.runner }} next export
        env:
          runner: ${{ steps.detect-package-manager.outputs.runner }}
          command: ${{ steps.detect-package-manager.outputs.command }}
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: frontend/out

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./frontend/out